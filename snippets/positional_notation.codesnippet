<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>mypositionalnotation</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>// snippet_id: c3cdf631-5bd3-4eaa-823b-4743725b964f
// https://github.com/semisagi0/kyopro-snippet
extension Int {
    func positionalNotation(base: Int) -&gt; [Int] {
        var result: [Int] = []
        var n = self
        while n &gt; 0 {
            result.append(n % base)
            n /= base
        }
        return result
    }
}

func testPositionalNotation() {
    assert(0.positionalNotation(base: 2) == [])
    assert(1.positionalNotation(base: 2) == [1])
    assert(2.positionalNotation(base: 2) == [0, 1])
    assert(3.positionalNotation(base: 2) == [1, 1])
    assert(4.positionalNotation(base: 2) == [0, 0, 1])
    assert(0.positionalNotation(base: 3) == [])
    assert(1.positionalNotation(base: 3) == [1])
    assert(2.positionalNotation(base: 3) == [2])
    assert(3.positionalNotation(base: 3) == [0, 1])
    assert(4.positionalNotation(base: 3) == [1, 1])
    assert(5.positionalNotation(base: 3) == [2, 1])
    assert(6.positionalNotation(base: 3) == [0, 2])
}

testPositionalNotation()
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>D04D58D3-47E6-4C0E-82FA-038612CD9134</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>Positional Notation</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
