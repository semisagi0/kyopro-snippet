<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>myrunlengthencode</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>// snippet_id: a1cd2c61-4932-42fe-8a29-9bb5f3ab2f65
// https://github.com/semisagi0/kyopro-snippet
extension Sequence where Element: Equatable {
    func runLengthEncode() -&gt; [(element: Element, count: Int)] {
        var result = [(element: Element, count: Int)]()
        var previous: Element?
        var count = 0
        for element in self {
            if element != previous {
                if let previous = previous {
                    result.append((element: previous, count: count))
                }
                previous = element
                count = 1
            } else {
                count += 1
            }
        }
        if let previous = previous {
            result.append((element: previous, count: count))
        }
        return result
    }
}

func testRunLengthEncode() {
    func equal&lt;Element1, Element2&gt;(_ a: [(Element1, Element2)], _ b: [(Element1, Element2)]) -&gt; Bool where Element1: Equatable, Element2: Equatable {
        if a.count != b.count {
            return false
        }
        for i in 0 ..&lt; a.count {
            if a[i].0 != b[i].0 || a[i].1 != b[i].1 {
                return false
            }
        }
        return true
    }

    assert(equal(([] as [Int]).runLengthEncode(), []))
    assert(equal(["a"].runLengthEncode(), [("a", 1)]))
    assert(equal(["a", "a"].runLengthEncode(), [("a", 2)]))
    assert(equal(["a", "a", "b"].runLengthEncode(), [("a", 2), ("b", 1)]))
    assert(equal(["a", "a", "b", "b", "b", "a", "a", "c"].runLengthEncode(), [("a", 2), ("b", 3), ("a", 2), ("c", 1)]))
    assert(equal("".runLengthEncode(), []))
    assert(equal("aabbbaac".runLengthEncode(), [("a", 2), ("b", 3), ("a", 2), ("c", 1)]))
}

testRunLengthEncode()
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>BA9179A0-9592-4F9D-A443-F8429E7FF059</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>Run Length Encode</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
